name: SynTest CI

on:
  push:
    branches: [main, setup-github-npm-repositories]
  pull_request:
    branches: [main]

jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        # Run the pipeline on all the currently supported LTS versions and the latest version
#        node-version: [10.x, 12.x, 14.x, 15.x]
#
#    steps:
#      # Cloning
#      - uses: actions/checkout@v2
#        with:
#          repository: "syntest-framework/syntest-framework"
#          token: ${{ secrets.SYNTEST_CI }}
#          path: syntest-framework
#      - uses: actions/checkout@v2
#        with:
#          path: syntest-solidity
#
#      # Setup
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#
#      # Caching
#      - name: Cache Node.js modules
#        uses: actions/cache@v2
#        with:
#          path: ~/.npm
#          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.OS }}-node-
#            ${{ runner.OS }}-
#
#      # SynTest Framework
#      - name: Framework - Install Dependencies
#        run: npm install
#        working-directory: syntest-framework
#      - name: Framework - Build framework
#        run: npm run build
#        working-directory: syntest-framework
#
#      # Dependencies
#      - name: Solidity - Install Dependencies
#        run: npm install
#        working-directory: syntest-solidity
#
#      # Building
#      - name: Solidity - Build Solidity
#        run: npm run build
#        working-directory: syntest-solidity
#
#      # Testing
#      - name: Solidity - Run Tests
#        run: npm test
#        working-directory: syntest-solidity

  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 10
          registry-url: https://npm.pkg.github.com
      - uses: jgierer12/npm-auth-gpr@v1
        with:
          token: ${{ secrets.NPM_REGISTRY_TOKEN }}
      - run: npm install
      - run: npm publish
#  docker:
#    runs-on: ubuntu-latest
#    steps:
#      -
#        name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#      -
#        name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#      -
#        name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      -
#        name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          push: true
#          tags: user/app:latest
#      -
#        name: Image digest
#        run: echo ${{ steps.docker_build.outputs.digest }}